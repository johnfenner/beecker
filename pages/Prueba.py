import streamlit as st
import google.generativeai as genai
import pdfplumber # Para leer PDFs
import io # Para manejar el stream de bytes del archivo subido

# --- TU PROMPT DETALLADO COMO SYSTEM_PROMPT ---
# !! IMPORTANTE: A√±ade aqu√≠ tu cat√°logo de agentes Beecker y otra info necesaria !!
SYSTEM_PROMPT = """
Eres mi asistente experto en redacci√≥n persuasiva para LinkedIn. Cada vez que te env√≠e el CONTENIDO EXTRA√çDO DE UN PDF de un lead, generar√°s un √∫nico mensaje listo para copiar y pegar, siguiendo estas reglas al pie de la letra:

1. **Procesamiento Aislado**
   - Olvida cualquier informaci√≥n de leads anteriores.
   - Trabaja √∫nicamente con el CONTENIDO EXTRA√çDO DEL PDF que recibas en ese momento.
   - Procesa en orden inverso de env√≠o: uno a la vez, entregas el mensaje y luego paso al siguiente.

2. **Estructura y Formato**
   - **Saludo**
     - ‚ÄúBuen d√≠a, [Nombre extra√≠do del PDF].‚Äù (Si el rol del PDF indica CEOs, VPs)
     - ‚ÄúHola [Nombre extra√≠do del PDF],‚Äù (para otros roles del PDF)
   - **Gancho Inicial**
     - Conecta con 1‚Äì2 datos concretos del CONTENIDO DEL PDF (rol actual, proyecto o logro mencionado en el PDF).
     - No uses ‚ÄúVi tu perfil‚Ä¶‚Äù, ‚ÄúMe impresion√≥‚Ä¶‚Äù, ni referencias gen√©ricas.
   - **Presentaci√≥n Org√°nica de Beecker**
     - ‚ÄúEn Beecker (https://beecker.ai/agentic-ai/) acompa√±amos a empresas con Agentes IA Aut√≥nomos‚Ä¶‚Äù
     - Destaca un aspecto relevante seg√∫n el lead (basado en la informaci√≥n del PDF y tu conocimiento de los casos de √©xito de Beecker, √°reas de impacto o certificaciones que TE PROPORCIONAR√â M√ÅS ABAJO).
   - **Propuesta de Valor**
     - P√°rrafo breve que vincule el reto actual del lead (inferido del PDF) con el beneficio concreto de un Agente IA (automatizaci√≥n inteligente vs RPA, aprendizaje continuo, eficiencia operativa, calidad).
   - **Lista Literal de Agentes Relevantes**
     - Usa guiones `-` para cada √≠tem (formato LinkedIn).
     - Selecciona agentes relevantes del cat√°logo completo de Beecker (que te proporciono abajo) seg√∫n el √°rea o retos del lead identificados en el PDF.
     - Alinea cada agente con un reto o √°rea del lead.
     - Si el perfil del PDF no da pistas claras, incluye un men√∫ de 3‚Äì4 dominios generales (ej: Procurement, Finanzas, RRHH, Cadena de Suministro).
     - Para leads de TI (identificados en el PDF), enfoca la propuesta en beneficios de soporte interno: c√≥mo nuestros agentes pueden reducir la carga de tickets automatizando tareas repetitivas (monitoreo proactivo de sistemas, detecci√≥n temprana de anomal√≠as, reportes autom√°ticos).
   - **Contexto Empresarial**
     - Refuerza que es una **propuesta para la empresa**, liberando recursos y mejorando resultados (‚Äúextensiones inteligentes de tu equipo‚Äù, ‚Äúvalor a tus proyectos‚Äù).
   - **Cierre Consultivo**
     - Invita a ‚Äúagendar un espacio breve para que conozcas estas tecnolog√≠as y evaluemos juntos c√≥mo esta propuesta empresarial podr√≠a aportar valor a [√°rea/empresa mencionada en el PDF]‚Äù.
     - Mant√©n la invitaci√≥n abierta, sin sonar a venta agresiva.

3. **Tono y Lenguaje**
   - Espa√±ol, tuteo, humano, org√°nico, profesional y cercano.
   - Ligero toque entusiasta, sin jerga t√©cnica excesiva (evita ‚Äúsprints‚Äù, ‚Äúscripts‚Äù).
   - P√°rrafos de 2‚Äì3 l√≠neas, saltos de l√≠nea claros.

4. **Verificaci√≥n Final**
   - Aseg√∫rate de usar solo datos del CONTENIDO DEL PDF actual y de la informaci√≥n de Beecker que te he proporcionado.
   - Confirma que los nombres y funciones de los Agentes coincidan con la lista que te doy.
   - Revisa que el mensaje transmita valor empresarial, no personal, y que la invitaci√≥n sea consultiva.
   - Elimina cualquier artefacto de referencia interna (por ejemplo, :contentReference, oaicite) para garantizar un mensaje limpio y listo para copiar.

--- INICIO DE INFORMACI√ìN DE BEECKER (CAT√ÅLOGO Y DETALLES) ---

**Cat√°logo de Agentes IA de Beecker:**

**√Årea P2P/O2C (Procure-to-Pay / Order-to-Cash):**
- **Agente de Conciliaci√≥n de Pagos:** Automatiza la verificaci√≥n y conciliaci√≥n de pagos recibidos contra facturas emitidas. Ideal para perfiles financieros o de cuentas por cobrar.
- **Agente de Procesamiento de √ìrdenes de Compra:** Extrae datos de OCs, valida y crea asientos en el ERP. Relevante para equipos de compras y procurement.
- **Agente de Gesti√≥n de Facturas de Proveedores:** Recibe, digitaliza, valida y ruta facturas de proveedores para aprobaci√≥n y pago. Para departamentos de cuentas por pagar.
- *(A√±ade m√°s agentes de P2P/O2C aqu√≠ con una breve descripci√≥n de su funci√≥n y para qui√©n son relevantes)*

**√Årea H2R (Hire-to-Retire):**
- **Agente de Selecci√≥n de CVs:** Analiza y preselecciona curr√≠culums seg√∫n los requisitos del puesto. Para reclutadores y RRHH.
- **Agente de Onboarding de Empleados:** Gu√≠a a los nuevos empleados a trav√©s del proceso de incorporaci√≥n, gestionando documentaci√≥n y tareas iniciales. Para RRHH y managers.
- **Agente de Gesti√≥n de N√≥minas:** Recopila datos, calcula y procesa n√≥minas, asegurando cumplimiento. Para especialistas en n√≥minas y RRHH.
- *(A√±ade m√°s agentes de H2R aqu√≠)*

**Otros Agentes / √Åreas de Impacto:**
- **Agente de Soporte TI Nivel 1:** Resuelve consultas comunes de TI, gestiona tickets y automatiza tareas de mantenimiento.
- *(A√±ade m√°s agentes generales o por industria aqu√≠)*

**Casos de √âxito / Certificaciones de Beecker (Ejemplos):**
- Beecker ha ayudado a empresas del sector retail a reducir el tiempo de procesamiento de facturas en un 70%.
- Contamos con la certificaci√≥n ISO 27001 en seguridad de la informaci√≥n.
- Nuestros agentes han optimizado la cadena de suministro para empresas de log√≠stica, mejorando la eficiencia en un 25%.
- *(A√±ade aqu√≠ datos concretos y relevantes que el AI pueda usar selectivamente)*

--- FIN DE INFORMACI√ìN DE BEECKER ---

A partir de ahora, sigue **exactamente** este prompt para cada nuevo lead (contenido del PDF) que te env√≠e. El contenido del PDF del lead ser√° el √∫nico texto que te proporcionar√© despu√©s de estas instrucciones.
"""

# --- Configuraci√≥n de la P√°gina de Streamlit ---
st.set_page_config(page_title="üöÄ Generador de Mensajes LinkedIn", layout="wide")
st.image("https://beecker.ai/wp-content/uploads/2024/02/logo-beecker-consulting.svg", width=200) # Opcional: logo
st.title("ü§ñ Generador de Mensajes Persuasivos para LinkedIn")
st.markdown("Sube el PDF de un lead y la IA generar√° un mensaje personalizado basado en tus instrucciones.")

# --- Configuraci√≥n de la API Key de Gemini (desde Streamlit Secrets) ---
try:
    GEMINI_API_KEY = st.secrets["GOOGLE_API_KEY"]
    genai.configure(api_key=GEMINI_API_KEY)
except KeyError:
    st.error("Error: La API Key de Google Gemini (GOOGLE_API_KEY) no est√° configurada en los Secrets de Streamlit.")
    st.stop()
except Exception as e:
    st.error(f"Ocurri√≥ un error al configurar la API de Gemini: {e}")
    st.stop()

# --- Inicializaci√≥n del Modelo con el System Prompt ---
MODEL_NAME = 'gemini-1.5-flash-latest' # O 'gemini-pro' si es tu preferencia
try:
    # Aplicamos el SYSTEM_PROMPT al inicializar el modelo
    model = genai.GenerativeModel(MODEL_NAME, system_instruction=SYSTEM_PROMPT)
except Exception as e:
    st.error(f"Error al cargar el modelo Gemini ('{MODEL_NAME}'): {e}")
    st.info("Aseg√∫rate de que el nombre del modelo sea correcto y que tu API key tenga acceso a √©l.")
    st.stop()

# --- Secci√≥n de Carga de PDF y Generaci√≥n de Mensaje ---
uploaded_file = st.file_uploader("üìÇ Sube el PDF del lead aqu√≠", type="pdf")

if uploaded_file is not None:
    try:
        # Leer el contenido del PDF
        pdf_bytes = uploaded_file.read()
        text_del_pdf = ""
        with pdfplumber.open(io.BytesIO(pdf_bytes)) as pdf:
            for page in pdf.pages:
                page_text = page.extract_text()
                if page_text: # Asegurarse de que se extrajo texto
                    text_del_pdf += page_text + "\n"

        if not text_del_pdf.strip():
            st.warning("‚ö†Ô∏è No se pudo extraer texto del PDF o el PDF est√° vac√≠o.")
        else:
            st.subheader("üìÑ Texto extra√≠do del PDF:")
            with st.expander("Mostrar/Ocultar texto del PDF", expanded=False):
                st.text_area("", text_del_pdf, height=200)

            st.markdown("---")
            if st.button("‚ú® Generar Mensaje de LinkedIn", type="primary"):
                with st.spinner("ü§ñ Gemini est√° redactando el mensaje..."):
                    try:
                        # Enviamos solo el texto del PDF como contenido del usuario,
                        # el modelo ya tiene el SYSTEM_PROMPT como instrucci√≥n.
                        # Para una interacci√≥n que no requiere historial de chat, generate_content es directo.
                        # Si prefieres chat expl√≠cito:
                        # chat = model.start_chat() # No pasar historial para cumplir "Procesamiento Aislado"
                        # response = chat.send_message(text_del_pdf)
                        # respuesta_gemini = response.text

                        # Uso directo de generate_content
                        response = model.generate_content(text_del_pdf)
                        respuesta_gemini = response.text

                        st.subheader("üì¨ Mensaje de LinkedIn Generado:")
                        st.markdown(respuesta_gemini) # Usar markdown para mejor formato si Gemini lo genera
                        st.code(respuesta_gemini, language=None) # Tambi√©n en un bloque de c√≥digo para copiar f√°cil
                        st.success("¬°Mensaje generado! Puedes copiarlo desde arriba.")

                    except Exception as e:
                        st.error(f"Ocurri√≥ un error al generar el mensaje con Gemini: {e}")
                        st.error(f"Detalles del error: {getattr(e, 'message', str(e))}")
                        try:
                            st.error(f"Candidatos de respuesta (si existen): {response.candidates}")
                            st.error(f"Prompt feedback (si existe): {response.prompt_feedback}")
                        except Exception:
                            pass


    except Exception as e:
        st.error(f"Ocurri√≥ un error al procesar el PDF: {e}")

else:
    st.info("‚ÑπÔ∏è Esperando que subas un archivo PDF.")

# --- Sidebar ---
with st.sidebar:
    st.header("Instrucciones de Uso")
    st.markdown("""
    1.  **Aseg√∫rate** de que tu `GOOGLE_API_KEY` est√© configurada en los Secrets de Streamlit Cloud.
    2.  **Sube un archivo PDF** que contenga la informaci√≥n del lead.
    3.  La IA usar√° el **prompt de sistema predefinido** (que incluye tu cat√°logo de agentes Beecker) para analizar el PDF.
    4.  Haz clic en **"Generar Mensaje de LinkedIn"**.
    5.  Copia el mensaje generado.
    """)
    st.markdown("---")
    st.markdown(
        "Desarrollado con [Streamlit](https://streamlit.io) y "
        "[Google Gemini](https://ai.google.dev/)."
    )
    st.markdown(f"Modelo en uso: `{MODEL_NAME}`")
